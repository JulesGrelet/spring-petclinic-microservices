name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  pull-requests: read # allows SonarCloud to decorate PRs with analysis results

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run:
          ./mvnw compile
          -Dhttps.protocols=TLSv1.2
          -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN
          -Dorg.slf4j.simpleLogger.showDateTime=true
          -Djava.awt.headless=true
          --batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true

  testt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Test with Maven
        run:
          ./mvnw test
          -Dhttps.protocols=TLSv1.2
          -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN
          -Dorg.slf4j.simpleLogger.showDateTime=true
          -Djava.awt.headless=true
          --batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Test with Maven
        run:
          ./mvnw verify
          -Djacoco.destFile=exportJacoco/jacoco-fast.exec
      - name: Upload jacoco exec results
        uses: actions/upload-artifact@v2
        with:
          name: unit-tests-jacoco
          path: exportJacoco/jacoco-fast.exec

  jacoco-report:
    name: Jacoco Results
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Set up Jacoco
        uses: actions/download-artifact@v2
        with:
          name: unit-tests-jacoco
          path: target/
      - name: merge results
        run:
          .\mvn jacoco:merge package jacoco:report verify -DskipTests=true
      - name: Upload jacoco coverage despite the check result
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: coverage-results-report
          path: target/site/jacoco/
          if-no-files-found: error

  quality:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available.
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Analyze with SonarCloud
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=JulesGrelet_spring-petclinic-microservices

  package:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/clockbox:latest
        
    #runs-on: ubuntu-latest
    #steps:
    #  - uses: actions/checkout@v4
    #  - name: Set up JDK 17
    #    uses: actions/setup-java@v3
    #    with:
    #      java-version: '17'
    #      distribution: 'temurin'
    #      cache: maven
    #  - name: Analyze with SonarCloud
    #    uses: SonarSource/sonarcloud-github-action@de2e56b42aa84d0b1c5b622644ac17e505c9a049
    #    env:
    #      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    #    with:
    #      args:
    #        -Dsonar.projectKey=JulesGrelet_spring-petclinic-microservices
    #        -Dsonar.organization=julesgrelet
