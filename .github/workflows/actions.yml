name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  pull-requests: read # allows SonarCloud to decorate PRs with analysis results

jobs:

  build:
    name: Compilation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run:
          ./mvnw compile
          -Dhttps.protocols=TLSv1.2
          -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN
          -Dorg.slf4j.simpleLogger.showDateTime=true
          -Djava.awt.headless=true
          --batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true

  test:
    name: Tests
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Test with Maven
        run:
          ./mvnw test
          -Dhttps.protocols=TLSv1.2
          -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN
          -Dorg.slf4j.simpleLogger.showDateTime=true
          -Djava.awt.headless=true
          --batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true
          #-Djacoco.destFile=exportJacoco/jacoco-fast.exec
      #- name: Upload jacoco exec results
        #uses: actions/upload-artifact@v2
        #with:
          #name: unit-tests-jacoco
          #path: exportJacoco/jacoco-fast.exec

  #jacoco-report:
    #name: Jacoco Results
    #needs: test
    #runs-on: ubuntu-latest
    #steps:
      #- uses: actions/checkout@v2
      #- name: Set up JDK 17
        #uses: actions/setup-java@v3
        #with:
          #java-version: '17'
          #distribution: 'temurin'
          #cache: maven
      #- name: Set up Jacoco
        #uses: actions/download-artifact@v2
        #with:
          #name: unit-tests-jacoco
          #path: target/
      #- name: merge results
        #run:
          #.\mvn jacoco:merge package jacoco:report verify -DskipTests=true
      #- name: Upload jacoco coverage despite the check result
        #if: ${{ always() }}
        #uses: actions/upload-artifact@v2
        #with:
          #name: coverage-results-report
          #path: target/site/jacoco/
          #if-no-files-found: error

  quality:
    name: QualitÃ©
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Check out the repo & improve relevancy of analysis
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available.
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Analyze with SonarCloud
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=JulesGrelet_spring-petclinic-microservices

  package:
    name: Package
    runs-on: ubuntu-latest
    #needs: quality
    permissions:
      packages: write
      contents: read
      attestations: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: julesgrelet/petclinic
      # test
      - name: Output Run ID
        run: echo ${{ github.run_id }}
      - name: Output Run Number
        run: echo ${{ github.run_number }}
      - name: Output Run Attempt
        run: echo ${{ github.run_attempt }}
      # test
      - name: Set env variables of image version
      #"VERSION_NUMBER_WITH_OFFSET=$((1000+GITHUB_RUN_NUMBER))" >> $GITHUB_ENV
        run: |
          echo "GITHUB_RUN_NUMBER_TEST=$((42))" >> $GITHUB_ENV
          echo "${{ env.GITHUB_RUN_NUMBER_TEST }}"
          echo "$GITHUB_RUN_NUMBER_TEST"
          
      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}_1.1.${{ github.run_number }}
          labels: ${{ steps.meta.outputs.labels }}
      #- name: Generate artifact attestation
        #uses: actions/attest-build-provenance@v1
        #with:
          #subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          #subject-digest: ${{ steps.push.outputs.digest }}
          #push-to-registry: true
